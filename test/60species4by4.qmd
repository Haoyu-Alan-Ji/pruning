---
title: "My document"
author: "Haoyu Ji-jih20"
format: 
  html:
    self-contained: true
date: today
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(here)
setwd(here::here())
```

```{r pkgs, message = FALSE, warning=FALSE}
library(Matrix)
library(ape)
library(tidyverse); theme_set(theme_bw())
library(waldo)
library(expm)
library(RTMB)
library(numDeriv) ## for testing gradients
library(microbenchmark)
library(corHMM)
```

```{r seed}
set.seed(427)
source("../R/pruning_funs.R")
```

```{r primate-tree1}
load("../data/primates.rda")
data(primates)
p2 <- reorder(primates$tree, "pruningwise")
```

## with RTMB
```{r qtemp}
## put indices in corresponding to allowed transitions
states <- c("(0,0)", "(0,1)", "(1,0)", "(1,1)")
Q_template4 <- matrix(0, 4, 4,
                     dimnames = list(states, states))
allowed <- matrix(c(2,1,
                    3,1,
                    1,2,
                    4,2,
                    1,3,
                    4,3,
                    3,4,
                    2,4),
                  ncol = 2,
                  byrow = TRUE)
Q_template4[allowed] <- 1:8

log_trans_rates <- log(abs(rnorm(8)))
```


```{r}
corHMM_fit <- with(primates, corHMM(tree, trait, rate.cat = 1))

traits <- with(as.data.frame(primates$trait), 1 + (T1*2 + T2))
TMBdata <- tibble::lst(Q_template = Q_template4,
                       tree = p2, d = 4, trait_values = traits)
ff4 <- RTMB::MakeADFun(func = prune_nll,
                      parameters = list(log_trans_rates = log_trans_rates), silent = TRUE)

suppressWarnings(with(ff4, nlminb(par, fn, gr)))

with(ff4$env, ff4$fn(last.par.best))
with(ff4$env, ff4$gr(last.par.best))

new <- hmm2prune(corHMM_fit)
new
```


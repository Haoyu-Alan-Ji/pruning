---
title: "multistart test"
author: "Haoyu Ji"
format: 
  html:
    self-contained: true
date: today
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(here)
setwd(here::here())
```

```{r pkgs, message = FALSE, warning=FALSE}
## https://github.com/bbolker/corHMM/blob/bolker_clean/misc/test_RTMB.R
## remotes::install_github("bbolker/corHMM", ref = "bolker_clean")
library(Matrix)
library(ape)
library(tidyverse); theme_set(theme_bw())
library(expm)
library(RTMB)
library(future.apply)
library(rstream)
library(parallel)
```

```{r seed}
set.seed(427)
```

```{r funs}
source(here::here("R", "Q_template.R"))
source(here::here("R", "getinfo.R"))
```

```{r best}
bestfit  <- function(dat, ..., rate.cat = 1, multistart = 10) {

  tt <- system.time({
    dat <- list(tree = dat$tree, data = dat$data)

    invisible(capture.output(suppressWarnings(
      x <- with(dat, corHMM(tree, data, rate.cat = rate.cat, ...))
    )))
    
    loglik <- list(); loglik[1] <- x$loglik
    model <- list(); model[[1]] <- x

    ## worker function
    fitj <- function(i, dat, rate.cat, ...) {
      s <- new("rstream.mrg32k3a",
           seed = c(i, i+1, i+2, i+3, i+4, i+5),
           force.seed = TRUE)
      rstream.RNG(s)

      cat("â–¶ Worker", i, "started on PID", Sys.getpid(), "\n")
      flush.console()
      
      dat0 <- list(tree = dat$tree, data = dat$data)
      invisible(capture.output(suppressWarnings(
        y <- with(dat0, corHMM(tree, data, rate.cat = rate.cat, ...))
      )))
      return(list(loglik = y$loglik, model = y))
    }
    
    parallel_out <- future_lapply(
        1:(multistart - 1), \(i) fitj(i, dat, rate.cat, ...),
        future.seed = TRUE
      )

      for (i in seq_along(parallel_out)) {
        loglik[i + 1] <- parallel_out[[i]]$loglik
        model[[i + 1]] <- parallel_out[[i]]$model

      }
    
    best <- model[[which.max(loglik)]]
  })
    
  attr(best, "time") <- tt
  best
}
```

```{r get_rds, eval=FALSE}
ntaxvec <- round(exp(seq(log(20), log(1000), length.out = 15)))
multistart = 10
dd <- expand.grid(seed = 101:102, ntaxa = ntaxvec, ntrait = 2:3, model = c("ARD", "SYM"), 
                  multistart = TRUE, try.times = multistart, rate.cat = 1) |>
  transform(model = as.character(model)) ## factor messes up do.call, converts to numeric

plan(cluster, workers = min(multistart - 1, parallel::detectCores() - 1))
res <- list()
for (i in 1:nrow(dd)) {
  cat(sprintf("\rRunning %d/%d", i, nrow(dd)))
  flush.console()
  res[[i]] <- do.call(sumfun, dd[i,])
  saveRDS(res, file = here::here('data', 'para1.rds'))
}
res <- do.call(rbind, res)
saveRDS(res, file = here::here('data', 'para1.rds'))
```

```{r ddtest}
## exploring differences ...
dd <- readRDS(here::here("data", "para1.rds"))
if (!is.data.frame(dd)) dd <- as.data.frame(t(dd))

with(dd, summary(as.numeric(RTMB_loglik)-as.numeric(orig_loglik)))
dd2 <- dd |>
  mutate(ldiff = as.numeric(RTMB_loglik)-as.numeric(orig_loglik)) |>
  arrange(ldiff) |>
  mutate(n = seq(n()))

## filter(dd2, ldiff<0) |> View()

ggplot(dd2, aes(n, ldiff)) + geom_point()
```